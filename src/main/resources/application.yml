server:
  port: 8085

spring:
  security:
    oauth2:
      client:
        registration:
#          keycloak:
#            client-id: oauth2-client-app
#            client-secret: xbrVmML8igOquiucHFwjfjN31PX2D8Dc
#            client-name: oauth2-client-app
#            authorization-grant-type: authorization_code
#            scope: openid, profile, email
#            client-authentication-method: client_secret_basic
#            redirect-uri: http://localhost:8085/client
#            provider: keycloak

            keycloak:
              client-id: oauth2-client-app
              client-secret: xbrVmML8igOquiucHFwjfjN31PX2D8Dc
              client-name: oauth2-client-app
              authorization-grant-type: password
              scope: openid, profile, email
              client-authentication-method: client_secret_basic
              provider: keycloak

#          keycloakWithPKCE:
#            client-id: oauth2-client-app2
#            client-secret: 1SKbuluZ7b4RXZ9UVynTzOMA53zn6BP5
#            client-name: oauth2-client-app
#            authorization-grant-type: authorization_code
#            scope: openid, profile, email
#            client-authentication-method: client_secret_basic
#            redirect-uri: http://localhost:8085/login/oauth2/code/keycloak
#            provider: keycloak

        provider:
          keycloak:
            issuerUri: http://localhost:8200/realms/oauth2
            authorizationUri: http://localhost:8200/realms/oauth2/protocol/openid-connect/auth
            jwkSetUri: http://localhost:8200/realms/oauth2/protocol/openid-connect/certs
            tokenUri: http://localhost:8200/realms/oauth2/protocol/openid-connect/token
            userInfoUri: http://localhost:8200/realms/oauth2/protocol/openid-connect/userinfo
            userNameAttribute: preferred_username


logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.security.config: DEBUG
